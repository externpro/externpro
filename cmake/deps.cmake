function(proDeps)
  set(options XP_MODULE)
  set(oneValueArgs PKG BASE BRANCH DESC DIST_DIR LICENSE REPO TAG UPSTREAM VER WEB SHA256_Linux SHA256_win64 URL_Linux URL_win64 SHA256_utres)
  set(multiValueArgs DEPS EXE_DEPS)
  cmake_parse_arguments(P "${options}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN})
  # dot
  if(DEFINED P_DEPS OR DEFINED P_EXE_DEPS)
    foreach(dep ${P_DEPS} ${P_EXE_DEPS})
      string(APPEND dot "  \"${P_PKG}\" -> \"${dep}\"\;\n")
    endforeach()
  endif()
  set(dot "${dot}" PARENT_SCOPE)
  # README project
  if(DEFINED P_WEB)
    string(APPEND rme "|[${P_PKG}](${P_WEB})")
  else()
    string(APPEND rme "|${P_PKG}")
  endif()
  # README license
  if(DEFINED P_LICENSE)
    string(APPEND rme "|${P_LICENSE}")
  else()
    string(APPEND rme "| ")
  endif()
  # README description [dependencies]
  if(DEFINED P_DESC)
    string(APPEND rme "|${P_DESC}")
    if(DEFINED P_DEPS)
      list(JOIN P_DEPS ", " deps)
      string(APPEND rme " [deps: _${deps}_]")
    endif()
    if(DEFINED P_EXE_DEPS)
      list(JOIN P_EXE_DEPS ", " deps)
      string(APPEND rme " [exe deps: _${deps}_]")
    endif()
  else()
    string(APPEND rme "| ")
  endif()
  # README version
  if(DEFINED P_VER)
    string(APPEND rme "|${P_VER}")
  elseif(DEFINED P_TAG)
    string(APPEND rme "|[${P_TAG}](https://${P_REPO}/releases/tag/${P_TAG} 'release')")
  else()
    string(APPEND rme "| ")
  endif()
  # README source
  if(DEFINED P_REPO)
    string(APPEND rme "|[repo](https://${P_REPO} '${P_REPO}')")
    if(DEFINED P_UPSTREAM)
      string(APPEND rme " [upstream](https://${P_UPSTREAM} '${P_UPSTREAM}')")
    endif()
  elseif(DEFINED P_UPSTREAM)
    string(APPEND rme "|[upstream](https://${P_UPSTREAM} '${P_UPSTREAM}')")
  else()
    string(APPEND rme "| ")
  endif()
  # README diff
  if(DEFINED P_REPO AND DEFINED P_BASE AND DEFINED P_BRANCH)
    string(APPEND rme "|[diff](https://${P_REPO}/compare/${P_BASE}...${P_BRANCH} '${P_REPO}/compare/${P_BASE}...${P_BRANCH}')")
  else()
    string(APPEND rme "| ")
  endif()
  set(rme "${rme}|\n" PARENT_SCOPE)
endfunction()
string(JOIN "\n" dot
  "digraph GG {"
  "  node [fontsize=12]\;"
  ""
  )
string(JOIN "\n" rme
  "# projects"
  "[SPDX License List](https://spdx.org/licenses/ '')"
  "|project|license|description [dependencies]|version|source|diff|"
  "|-------|-------|--------------------------|-------|------|----|"
  ""
  )
include(${CMAKE_CURRENT_LIST_DIR}/pros.cmake)
# https://stackoverflow.com/q/9298278/
get_cmake_property(vars VARIABLES)
list(SORT vars)
foreach(var ${vars})
  if(var MATCHES "^xp_")
    string(REGEX REPLACE "^xp_" "" pkg ${var})
    proDeps(PKG ${pkg} ${${var}})
  endif()
endforeach()
string(APPEND dot "}\n")
set(binDot ${CMAKE_BINARY_DIR}/deps.dot)
set(binPng ${CMAKE_BINARY_DIR}/deps.png)
set(binRme ${CMAKE_BINARY_DIR}/README.md)
set(srcDot ${CMAKE_CURRENT_LIST_DIR}/deps.dot)
set(srcPng ${CMAKE_CURRENT_LIST_DIR}/deps.png)
set(srcRme ${CMAKE_CURRENT_LIST_DIR}/README.md)
file(WRITE ${binDot} ${dot})
file(WRITE ${binRme} ${rme})
find_program(XP_DOT_PATH "dot")
mark_as_advanced(XP_DOT_PATH)
if(XP_DOT_PATH AND EXISTS ${binDot})
  execute_process(COMMAND dot -Tpng -o${binPng} ${binDot})
endif()
if(EXISTS ${binDot})
  execute_process(COMMAND ${CMAKE_COMMAND} -E copy_if_different ${binDot} ${srcDot})
  file(REMOVE ${binDot})
endif()
if(EXISTS ${binPng})
  execute_process(COMMAND ${CMAKE_COMMAND} -E copy_if_different ${binPng} ${srcPng})
  file(REMOVE ${binPng})
endif()
if(EXISTS ${binRme})
  execute_process(COMMAND ${CMAKE_COMMAND} -E copy_if_different ${binRme} ${srcRme})
  file(REMOVE ${binRme})
endif()
