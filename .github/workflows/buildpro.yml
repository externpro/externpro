name: Build docker buildpro image

on:
  workflow_call:
    inputs:
      img:
        required: true
        type: string
      platforms:
        required: false
        type: string
        default: "local" # use platform that invokes the build

jobs:
  buildpro:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    env:
      REGISTRY: ghcr.io

    steps:
      -
        name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # fetches all history
          fetch-tags: true # explicitly fetches tags
          submodules: true
      -
        name: Determine tags
        id: tags
        run: |
          gtag=`git describe --tags`
          if [ -n "$(git status --porcelain --untracked=no)" ] || [[ ${gtag} == *"-g"* ]]; then
            gtag=latest
          fi
          echo "tag=$gtag" >> $GITHUB_OUTPUT
          echo "latest=${{ env.REGISTRY }}/${{ github.repository }}/${{ inputs.img }}:latest" >> $GITHUB_OUTPUT
          echo "tagged=${{ env.REGISTRY }}/${{ github.repository }}/${{ inputs.img }}:$gtag" >> $GITHUB_OUTPUT
        working-directory: ${{ github.workspace }}
      -
        name: Report before build
        run: |
          echo "img: ${{ inputs.img }}"
          echo "latest: ${{ steps.tags.outputs.latest }}"
          echo "tagged: ${{ steps.tags.outputs.tagged }}"
          docker pull ${{ steps.tags.outputs.latest }}
          docker images
          docker rmi ${{ steps.tags.outputs.latest }}
      -
        name: Set up Docker Buildx (for multi-platform builds)
        uses: docker/setup-buildx-action@v3
      -
        name: Set up QEMU (for emulating different CPU architectures)
        uses: docker/setup-qemu-action@v3
      -
        name: Authenticate GitHub Container Registry (ghcr)
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Extract metadata (tags, labels) for Docker
        id: metadata
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ inputs.img }}
      -
        name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ${{ github.workspace }}/public
          file: ${{ github.workspace }}/public/${{ inputs.img }}.dockerfile
          build-args: |
            BPROTAG=${{ steps.tags.outputs.tag }}
          platforms: ${{ inputs.platforms }}
          provenance: false
          labels: ${{ steps.metadata.outputs.labels }}
          tags: |
            ${{ steps.tags.outputs.latest }}
            ${{ steps.tags.outputs.tagged }}
          push: true
      -
        name: Attest Docker image
        uses: actions/attest-build-provenance@v2
        id: attest
        with:
          subject-name: ${{ env.REGISTRY }}/${{ github.repository }}/${{ inputs.img }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: false
      -
        name: Report after build
        run: |
          docker pull ${{ steps.tags.outputs.latest }}
          docker images
          docker rmi ${{ steps.tags.outputs.latest }}
      -
        name: Delete untagged images from ghcr
        uses: snok/container-retention-policy@v3.0.0
        with:
          account: ${{ github.repository_owner }}
          token: ${{ secrets.GITHUB_TOKEN }}
          image-names: ${{ github.event.repository.name }}/${{ inputs.img }}
          tag-selection: untagged
          cut-off: 1m
          dry-run: false
