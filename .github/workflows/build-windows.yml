name: Build Windows
on:
  workflow_call:
    inputs:
      cmake-workflow-preset:
        required: false
        type: string
        default: "Windows" # CMake workflow preset to use; e.g., Windows, WindowsRelease
jobs:
  build:
    runs-on: windows-2022
    env:
      CMAKE_PRESET: Windows
    steps:
      -
        name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # fetches all history
          fetch-tags: true # explicitly fetches tags
          submodules: true
      -
        name: CMake Configure
        run: cmake --preset=${{ env.CMAKE_PRESET }}
      -
        name: CMake Workflow
        run: cmake --workflow --preset=${{ inputs.cmake-workflow-preset }}
      -
        name: Upload CMake logs
        uses: actions/upload-artifact@v4
        with:
          name: cmake-logs-${{ env.CMAKE_PRESET }}-${{ runner.arch }}
          path: |
            _bld-${{ env.CMAKE_PRESET }}/CMakeFiles/CMakeConfigureLog.yaml
      -
        name: Find devel package tarball
        id: find_tarball
        shell: bash
        run: |
          file=$(pwd)/$(ls _bld-${{ env.CMAKE_PRESET }}/${{ github.event.repository.name }}*-devel.tar.xz)
          if [[ ! -f "$file" ]]; then
            echo "Tarball not found!" >&2
            exit 1
          fi
          echo "filepath=$file" >> $GITHUB_OUTPUT
          echo "filename=$(basename $file)" >> $GITHUB_OUTPUT
        working-directory: ${{ github.workspace }}
      -
        name: Convert Git Bash path to Windows path
        id: convert_path
        shell: pwsh
        run: |
          $windowsPath = '${{ steps.find_tarball.outputs.filepath }}' -replace '^/([a-zA-Z])/', '$1:/' -replace '/', '\'
          echo "windows_path=$windowsPath" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
      -
        name: Upload devel tarball artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.find_tarball.outputs.filename }}
          path: ${{ steps.convert_path.outputs.windows_path }}
